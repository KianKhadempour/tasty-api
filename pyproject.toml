[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tasty-api"
dynamic = ["version"]
description = "A typed wrapper for the Tasty API."
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["api", "recipes", "cooking", "wrapper"]
authors = [{ name = "Kian Khadempour", email = "kiankhadempour@gmail.com" }]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Intended Audience :: Developers",
]
dependencies = [
  "requests>=2.32.2",
  "pydantic>=2.7.1",
  "pydantic-extra-types>=2.7.0",
  "pycountry>=23",
]

[project.urls]
Documentation = "https://github.com/KianKhadempour/tasty-api#readme"
Issues = "https://github.com/KianKhadempour/tasty-api/issues"
Source = "https://github.com/KianKhadempour/tasty-api"

[tool.hatch.version]
path = "src/tasty_api/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = ["pyright>=1.1.364"]
[tool.hatch.envs.types.scripts]
check = "pyright {args}"

[tool.hatch.envs.test]
dependencies = ["pytest>=8.2.1", "pytest-cov>=5.0.0"]
[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]
[tool.hatch.envs.test.scripts]
test = "pytest {args}"
test-cov = "pytest --cov=src/tasty_api {args}"

[tool.coverage.run]
source_pkgs = ["tasty_api", "tests"]
branch = true
parallel = true
omit = ["src/tasty_api/__about__.py"]

[tool.coverage.paths]
tasty_api = ["src/tasty_api", "*/tasty-api/src/tasty_api"]
tests = ["tests", "*/tasty-api/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if typing.TYPE_CHECKING:",
]

[tool.ruff]
line-length = 88
src = ["src"]
show-fixes = true
target-version = "py38"
lint.select = [
  "A",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "SIM",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
lint.ignore = ["ISC001", "UP006", "UP007", "A003"]
lint.unfixable = [
  "F401",  # Don't touch unused imports
]

[tool.ruff.extend-per-file-ignores]
"tests/*" = [
  "S101",  # Use of 'assert' statement
]

[tool.ruff.lint.isort]
known-first-party = ["tasty_api"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.pyright]
include = ["src"]
strict = ["src"]
pythonVersion = "3.8"
